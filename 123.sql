-- MySQL Script generated by MySQL Workbench
-- Sun Jun  5 00:31:01 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Електронна кафедра
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Електронна кафедра
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Електронна кафедра` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `Електронна кафедра` ;

-- -----------------------------------------------------
-- Table `Електронна кафедра`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Електронна кафедра`.`group` (
  `group_id` VARCHAR(45) NOT NULL,
  `course` INT NOT NULL,
  `speciality` VARCHAR(45) NOT NULL,
  `student_id` INT(8) NOT NULL,
  PRIMARY KEY (`group_id`),
  UNIQUE INDEX `group_id_UNIQUE` (`group_id` ASC) VISIBLE,
  INDEX `student_idx` (`student_id` ASC) VISIBLE,
  CONSTRAINT `student`
    FOREIGN KEY (`student_id`)
    REFERENCES `Електронна кафедра`.`student` (`student_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Електронна кафедра`.`teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Електронна кафедра`.`teacher` (
  `teacher_id` INT(8) ZEROFILL NOT NULL,
  `lection_id` INT NOT NULL,
  `group_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`teacher_id`),
  UNIQUE INDEX `lection_id_UNIQUE` (`lection_id` ASC) VISIBLE,
  UNIQUE INDEX `teacher_id_UNIQUE` (`teacher_id` ASC) VISIBLE,
  UNIQUE INDEX `group_UNIQUE` (`group_id` ASC) VISIBLE,
  CONSTRAINT `lection`
    FOREIGN KEY (`lection_id`)
    REFERENCES `Електронна кафедра`.`lection` (`lection_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `group`
    FOREIGN KEY (`group_id`)
    REFERENCES `Електронна кафедра`.`group` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Електронна кафедра`.`lection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Електронна кафедра`.`lection` (
  `lection_id` INT NOT NULL AUTO_INCREMENT,
  `lection_name` VARCHAR(45) NOT NULL,
  `teacher_id` INT NOT NULL,
  `student_id` INT(8) NOT NULL,
  `group_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`lection_id`),
  UNIQUE INDEX `lection_id_UNIQUE` (`lection_id` ASC) VISIBLE,
  INDEX `teacher_idx` (`teacher_id` ASC) VISIBLE,
  INDEX `student_idx` (`student_id` ASC) VISIBLE,
  INDEX `group_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `teacher`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `Електронна кафедра`.`teacher` (`teacher_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `student`
    FOREIGN KEY (`student_id`)
    REFERENCES `Електронна кафедра`.`student` (`student_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `group`
    FOREIGN KEY (`group_id`)
    REFERENCES `Електронна кафедра`.`group` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Електронна кафедра`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Електронна кафедра`.`student` (
  `student_id` INT(8) ZEROFILL NOT NULL,
  `group_id` VARCHAR(45) NOT NULL,
  `lection_id` INT NOT NULL,
  PRIMARY KEY (`student_id`),
  UNIQUE INDEX `student_id_UNIQUE` (`student_id` ASC) VISIBLE,
  UNIQUE INDEX `group_id_UNIQUE` (`group_id` ASC) VISIBLE,
  UNIQUE INDEX `lection_id_UNIQUE` (`lection_id` ASC) VISIBLE,
  CONSTRAINT `group`
    FOREIGN KEY (`group_id`)
    REFERENCES `Електронна кафедра`.`group` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `lection`
    FOREIGN KEY (`lection_id`)
    REFERENCES `Електронна кафедра`.`lection` (`lection_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Електронна кафедра`.`usr`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Електронна кафедра`.`usr` (
  `id` INT ZEROFILL NOT NULL,
  `e-mail` VARCHAR(100) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `patronymic` VARCHAR(45) NULL,
  `phone` INT(10) NOT NULL,
  `role_id` INT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `e-mail_UNIQUE` (`e-mail` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `student`
    FOREIGN KEY (`id`)
    REFERENCES `Електронна кафедра`.`student` (`student_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `teacher`
    FOREIGN KEY (`id`)
    REFERENCES `Електронна кафедра`.`teacher` (`teacher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Електронна кафедра`.`score`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Електронна кафедра`.`score` (
  `score_id` VARCHAR(45) NOT NULL,
  `score` INT(3) NULL,
  `lection_id` INT NOT NULL,
  `student_id` INT(8) NOT NULL,
  `teacher_id` INT(8) NOT NULL,
  PRIMARY KEY (`score_id`),
  INDEX `lection_idx` (`lection_id` ASC) VISIBLE,
  INDEX `student_idx` (`student_id` ASC) VISIBLE,
  INDEX `teacher_idx` (`teacher_id` ASC) VISIBLE,
  CONSTRAINT `lection`
    FOREIGN KEY (`lection_id`)
    REFERENCES `Електронна кафедра`.`lection` (`lection_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `student`
    FOREIGN KEY (`student_id`)
    REFERENCES `Електронна кафедра`.`student` (`student_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `teacher`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `Електронна кафедра`.`teacher` (`teacher_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
